qua := function(A,B,Q)
K := CoefficientRing(Q);
n := Nrows(Q);
return (Matrix(K,1,n,Eltseq(A))*Q*Matrix(K,n,1,Eltseq(B)))[1,1];
end function;

//

HNef := function(Neg,M,L);
Eff := Cone([L!Eltseq(v) : v in Neg]);
Nef := Cone([L!Eltseq(v) : v in Rays(Dual(Eff*M))]);
return HilbertBasis(Nef);
end function;

//

IsEff:=function(N,Neg,M,H);
if {qua(N,A,M) ge 0 : A in H} eq {true} then return true;
else return false;
end if;
end function;

//

DisjointCurves:= function(Neg,M,L);
return [[A,B] : A,B in {L!N : N in Neg} join {L!-K} | qua(A,B,M) eq 0];
end function;

//

Nefification := function(A,N,Neg,H,L);
repeat
if IsEff(N,Neg,M,H) then m,i := Min([qua(N,E,M) : E in Neg]);
C:= Neg[i];
else return false;
end if;
if m lt 0 then N:= L!N - L!Eltseq(C);
else return true;
end if;
until m ge 0 or L!C eq L!A;
if L!C eq L!A then return false;
else return true;
end if;
end function;
